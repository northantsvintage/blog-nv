# The Firebase tools want a v6.x version of Node but Circle CI
# defaults to v4.x. Set the latest LTS version.
machine:
  node:
    version: 6.10.3

# Need to install firebase-tools so that the deploy works
dependencies:### Taken from https://github.com/Hyperparticle/hyperparticle.github.io/blob/2365749469b1eea3e8c4b18af24a4865fc426fd3/.circleci/config.yml

# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: starefossen/ruby-node:2-8
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: Ruby dependencies
          command: bundle install

      - run:
          name: Node dependencies
          command: npm install -g firebase-tools@3.9.1 --unsafe-perm

      - save_cache:
          paths:
            - /usr/local/bundle
            - /usr/local/lib/node_modules
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Build
          command: bundle exec jekyll build --verbose
      
      - run:
          name: Test
          command: bundle exec htmlproofer ./_site --check-html --disable-external
      
      - run:
          name: Deploy
          command: firebase deploy --token=$FIREBASE_TOKEN --non-interactive
  pre:
    - npm install -g firebase-tools

# Need to tell Circle CI how to build the site
compile:
  override:
    - bundle exec jekyll build --verbose

# Circle CI expects some kind of testing to pass in order for the
# build to be successful and deploy. Since you don't have tests
# you can fake it by just returning true. http://gph.is/1MLPDWK
test:
  override:
    - "true"

# How you tell Circle to deploy to Firebase. The important thing to
# note here is the FIREBASE_TOKEN env variable. See below.
deployment:
  production:
    branch: master
    commands:
      - firebase deploy --token=$FIREBASE_TOKEN --non-interactive

# # Ruby CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-ruby/ for more details
# #
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/ruby:2.4.1-node-browsers

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/postgres:9.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "Gemfile.lock" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run:
#           name: install dependencies
#           command: |
#             bundle install --jobs=4 --retry=3 --path vendor/bundle

#       - save_cache:
#           paths:
#             - ./vendor/bundle
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}

#       # Database setup
#       - run: bundle exec rake db:create
#       - run: bundle exec rake db:schema:load

#       # run tests!
#       - run:
#           name: run tests
#           command: |
#             mkdir /tmp/test-results
#             TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
#               circleci tests split --split-by=timings)"

#             bundle exec rspec \
#               --format progress \
#               --format RspecJunitFormatter \
#               --out /tmp/test-results/rspec.xml \
#               --format progress \
#               $TEST_FILES

#       # collect reports
#       - store_test_results:
#           path: /tmp/test-results
#       - store_artifacts:
#           path: /tmp/test-results
#           destination: test-results

# # How you tell Circle to deploy to Firebase. The important thing to
# # note here is the FIREBASE_TOKEN env variable. See below.
# deployment:
#   production:
#     branch: master
#     commands:
#       - firebase deploy --token=$FIREBASE_TOKEN --non-interactive